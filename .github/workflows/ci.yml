name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '6379:6379'
      postgres:
        image: postgres
        env:
          POSTGRES_DB: tie_test
          POSTGRES_USER: tie
          POSTGRES_PASSWORD: tie
        ports:
          - '5432:5432'
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install
        env:
          CI: true

      - name: Build
        run: pnpm build
        env:
          CI: true

      # this segfaults when doing dynamic imports (await import(..)) in the codebase
      - name: Test Core
        run: pnpm test:ci:core
        env:
          CI: true
          REDIS_URL: redis://localhost:${{job.services.redis.ports[6379]}}
          POSTGRES_URL: postgres://tie:tie@localhost:5432/tie_test

      - name: Test Apps
        run: pnpm test:ci:apps
        env:
          CI: true
          REDIS_URL: redis://localhost:${{job.services.redis.ports[6379]}}
          POSTGRES_URL: postgres://tie:tie@localhost:5432/tie_test

      - name: prune for production-like test
        run: |
          cd examples/kitchensink && pnpm prune --prod && pnpm install --prod && cd -
          cd packages/create-hyperstack/template-app && pnpm prune --prod && pnpm install --prod && cd -

      # - name: Nonbuilt apps test - template
      #   run: cd packages/create-hyperstack/template-app && bin/hyperstack routes

      - name: Built apps test - kitchensink
        run: cd examples/kitchensink && node dist/bin/hyperstack.js routes

      - name: Built apps test - template
        run: cd packages/create-hyperstack/template-app && node dist/bin/hyperstack.js routes

      - name: Install dependencies (restore dev deps)
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install
        env:
          CI: true
